# -*- coding: utf-8 -*-
"""Movie Directory.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/15agdlOTjCFnuypnC9u_cDKbWyCdkrH4K
"""

import streamlit as st
import requests

def main():
    st.title("Movie Search App")

    # TODO: Add form elements and web scraping logic

if __name__ == '__main__':
    main()

def main():
    st.title("Movie Search App")

    with st.form("movie_search_form"):
        movie_title = st.text_input("Movie Title")
        submit_button = st.form_submit_button("Search")

        if submit_button:
            # Perform web scraping
            url = "https://imdb-movies-web-series-etc-search.p.rapidapi.com/thegodfather.json"
            headers = {
                "X-RapidAPI-Key": "2d0de63c99mshb0faeaa4373b18cp12f0e6jsn043980cfc102",
                "X-RapidAPI-Host": "imdb-movies-web-series-etc-search.p.rapidapi.com"
            }
            params = {"title": movie_title}
            response = requests.get(url, headers=headers, params=params)
            
            # TODO: Extract movie information from the response using the appropriate JSON parsing techniques

            # TODO: Display the movie information using Streamlit

if __name__ == '__main__':
    main()

# Perform web scraping
url = "https://imdb-movies-web-series-etc-search.p.rapidapi.com/thegodfather.json"
headers = {
    "X-RapidAPI-Key": "2d0de63c99mshb0faeaa4373b18cp12f0e6jsn043980cfc102",
    "X-RapidAPI-Host": "imdb-movies-web-series-etc-search.p.rapidapi.com"
}
movie_title = "The Godfather"  # Placeholder value, replace with your desired movie title
params = {"title": movie_title}
response = requests.get(url, headers=headers, params=params)

# Extract movie information
if response.ok:
    movie_data = response.json()
    movie_listings = movie_data.get("results", [])

    # TODO: Parse and store relevant information from each movie listing
else:
    st.error("Error occurred while retrieving movie data.")

# Perform web scraping
url = "https://imdb-movies-web-series-etc-search.p.rapidapi.com/thegodfather.json"
headers = {
    "X-RapidAPI-Key": "2d0de63c99mshb0faeaa4373b18cp12f0e6jsn043980cfc102",
    "X-RapidAPI-Host": "imdb-movies-web-series-etc-search.p.rapidapi.com"
}
movie_title = "The Godfather"  # Placeholder value, replace with your desired movie title
params = {"title": movie_title}
response = requests.get(url, headers=headers, params=params)

# Extract movie information
if response.ok:
    movie_data = response.json()
    movie_listings = movie_data.get("results", [])

    # Display the movie information
    for movie in movie_listings:
        title = movie.get("title")
        release_year = movie.get("release_year")
        st.write(f"- {title} ({release_year})")
else:
    st.warning("No movies found for the given search criteria.")
